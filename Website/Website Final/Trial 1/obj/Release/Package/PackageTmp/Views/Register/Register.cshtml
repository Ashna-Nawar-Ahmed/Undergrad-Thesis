@model Trial_1.Models.User
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <meta name="viewport" content="width=device-width" />
  
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width" />
    <title>Demographic Questions</title>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/css/bootstrap.min.css">
    <script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/js/bootstrap.min.js"></script>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
    <link rel="stylesheet" href="~/css/newstory.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <link rel="stylesheet" href="https://www.w3schools.com/w3css/4/w3.css">

    <link rel="stylesheet" type="text/css" href="~/css/readStory.css">
    <title>WriteStory</title>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <meta name="viewport" content="width=device-width" />
    <title>Tag</title>
    <link rel="stylesheet" type="text/css" href="~/css/demographics.css">
    <style>


        /* 
Generic Styling, for Desktops/Laptops 
*/
        table {
            margin-left:50px;
            width: 100%;
            border-collapse: collapse;
            background-color: rgba(0, 0, 0, 0);
        }
        /* Zebra striping */

        .row {
            margin-right: 15px;
            margin-left: 50px;
        }
       

        td, th {
           
            padding-bottom: 20px;
            padding-right: 10px;
            text-align: left;
            margin: 0 auto;
        }

        /*
Max width before this PARTICULAR table gets nasty
This query will take effect for any screen smaller than 760px
and also iPads specifically.
*/


@@media
only screen and (max-width: 760px),
(min-device-width: 768px) and (max-device-width: 1024px)  {

	/* Force table to not be like tables anymore */
	table, thead, tbody, th, td, tr {
		display: block;
	}

	/* Hide table headers (but not display: none;, for accessibility) */
	thead tr {
		position: absolute;
		top: -9999px;
		left: -9999px;
	}

        
	td {
		/* Behave  like a "row" */
		border: none;
		position: relative;
		padding-left: 50%;
	}

	td:before {
		/* Now like a table header */
		position: absolute;
		/* Top/left values mimic padding */
		top: 6px;
		left: 6px;
		width: 45%;
		padding-right: 10px;
		white-space: nowrap;
	}

        .please-no {
            padding: 0px;
        }

        .footercontainer {
            display: none;
        }

        table, th, td {
            padding: 20px;
        }

        .step {
            counter-reset: currentStep;
        }

            .step li {
                list-style-type: none;
                float: left;
                width: 33.33%;
                position: relative;
                text-align: center;
            }

                .step li:before {
                    content: counter(currentStep);
                    counter-increment: currentStep;
                    width: 30px;
                    height: 30px;
                    line-height: 30px;
                    border: 10px solid #A9A9A9;
                    display: block;
                    text-align: center;
                    margin: 0 auto 10px auto;
                    border-radius: 50%;
                    background-color: #A9A9A9;
                    font-weight: bold;
                    color: transparent;
                }

                .step li:after {
                    content: '';
                    position: absolute;
                    width: 100%;
                    height: 5px;
                    background-color: #A9A9A9;
                    top: 15px;
                    left: -50%;
                    z-index: -1;
                }

                .step li:first-child:after {
                    content: none;
                }

                .step li.active-step {
                    color: green;
                }

                    .step li.active-step:before {
                        border-color: green;
                    }

                    .step li.active-step + li:after {
                        background-color: green;
                    }

    </style>
</head>
<body>
    <div>

        <div style="padding-bottom: 40px;">
            
        </div>


        <div class="card">
            <div class="row" style="padding-left:220px;">
                <p style="font-size:25px; font-weight: bold; text-align:center; padding-top: 50px; text-align : center; margin-bottom: 15px;"><u>Step 1/3 : Tell Us a Bit about Yourself! </u></p>
            </div>
            <div style="padding-bottom: 50px;">

            </div>

            @using (Html.BeginForm("Register", "Register", FormMethod.Post, new { @class = "my_form" }))
            {
                @Html.ValidationSummary(true, "", new
                   {
                       @class =
  "text-danger"
                   })

                <table class="row" style="background-color:rgba(0, 0, 0, 0);">
                    <tr>

                        <td>
                            @Html.LabelFor(model => model.gender, htmlAttributes: new { @class = "register.css" })

                        </td>
                        <td>

                            @Html.DropDownListFor(model => model.gender, new SelectList(Enum.GetValues(typeof(Gender))), "Select Gender")

                            @Html.ValidationMessageFor(model => model.gender, "", new { @class = "text-danger" })

                        </td>
                    </tr>

                    <tr>
                        @{
                            var selectList = new SelectList(
                                new List<SelectListItem>
                                {
            new SelectListItem {Text = "20-25", Value = "20-25"},
            new SelectListItem {Text = "26-30", Value = "26-30"},
            new SelectListItem {Text = "31-35", Value = "31-35"},
            new SelectListItem {Text = "36-40", Value = "36-40"},
            new SelectListItem {Text = "41 or Above", Value = "41 or Above"}
}, "Value", "Text");
                        }
                        <td>
                            @Html.LabelFor(model => model.ageRange, htmlAttributes: new { @class = "register.css" })
                        </td>
                        <td>
                            @Html.DropDownListFor(model => model.ageRange, selectList, "Select Range")
                            @Html.ValidationMessageFor(model => model.ageRange, "", new { @class = "text-danger" })
                        </td>
                    </tr>


                    <tr>
                        @{
                            var occupationList = new SelectList(
                                new List<SelectListItem>
                                {
            new SelectListItem {Text = "Medical Field (Doctor, Nurse, Nutritionist, Pharmacists and other Health Care workers etc)", Value = "Medical Field (Doctor, Nurse, Nutritionist, Pharmacists and other Health Care workers etc)"},
            new SelectListItem {Text = "Engineering and IT", Value = "Engineering and IT"},
            new SelectListItem {Text = "Business Field (Management, HR, Banking, Marketing etc)", Value = "Business Field (Management, HR, Banking, Marketing etc)"},
            new SelectListItem {Text = "Academia (Teacher, Lecturer, Assistant/ Associate Professor, Professor)", Value = "Academia (Teacher, Lecturer, Assistant/ Associate Professor, Professor)"},
            new SelectListItem {Text = "Student", Value = "Student"},
            new SelectListItem {Text = "Unemployed", Value = "Unemployed"},
            new SelectListItem {Text = "Other", Value = "Other"}
}, "Value", "Text");
                        }
                        <td>
                            @Html.LabelFor(model => model.occupation,
        htmlAttributes: new { @class = "register.css" })
                        </td>
                        <td>
                            @Html.DropDownListFor(model => model.occupation, occupationList, "Select Occupation", new { @style = "width: 250px;" })
                            @Html.ValidationMessageFor(model =>
        model.occupation, "", new { @class = "text-danger" })
                        </td>
                    </tr>



                    <tr>
                        @{
                            var fileOfStudy = new SelectList(
                                new List<SelectListItem>
                                {
            new SelectListItem {Text = "Medical, Biological or Chemical studies", Value = "Medical, Biological or Chemical studies"},
            new SelectListItem {Text = "Engineering and IT", Value = "Engineering and IT"},
            new SelectListItem {Text = "Business Field ", Value = "Business Field"},
            new SelectListItem {Text = "Social Studies", Value = "Social Studies"},

            new SelectListItem {Text = "Other", Value = "Other"}
}, "Value", "Text");
                        }
                        <td>
                            @Html.LabelFor(model => model.fieldOfStudy,
        htmlAttributes: new { @class = "register.css" })
                        </td>
                        <td>
                            @Html.DropDownListFor(model => model.fieldOfStudy, fileOfStudy, "Select")
                            @Html.ValidationMessageFor(model =>
        model.fieldOfStudy, "", new { @class = "text-danger" })
                        </td>
                    </tr>

                    <tr>
                        <td>
                            @Html.LabelFor(model => model.hometown,
        htmlAttributes: new { @class = "register.css" })
                        </td>
                        <td>
                            @Html.TextBoxFor(model => model.hometown, new { @class = "register.css", placeholder = "Upazilla, District" })
                            @Html.ValidationMessageFor(model =>
        model.hometown, "", new { @class = "text-danger" })
                        </td>
                    </tr>


                    <tr>
                        @{
                            var maritalStatusList = new SelectList(
                                new List<SelectListItem>
                                {
            new SelectListItem {Text = "Marrried", Value = "Married"},
            new SelectListItem {Text = "Unmarried", Value = "Unmarried"},

}, "Value", "Text");
                        }
                        <td>
                            @Html.LabelFor(model => model.maritalStatus,
        htmlAttributes: new { @class = "register.css" })
                        </td>
                        <td>
                            @Html.DropDownListFor(model => model.maritalStatus, maritalStatusList, "Select")
                            @Html.ValidationMessageFor(model =>
        model.maritalStatus, "", new { @class = "text-danger" })
                        </td>
                    </tr>


                    <tr>
                        @{
                            var spouceMoveList = new SelectList(
                                new List<SelectListItem>
                                {
            new SelectListItem {Text = "Yes", Value = "Yes"},
            new SelectListItem {Text = "No", Value = "No"},
            new SelectListItem {Text = "My Spouse Does Not Work", Value = "My Spouse Does Not Work"},
            new SelectListItem {Text = "I am not Married", Value = "I am not Married"},

}, "Value", "Text");
                        }
                        <td>
                            @Html.LabelFor(model => model.spouseMoveStatus,
            htmlAttributes: new { @class = "register.css" })
                        </td>
                        <td>
                            @Html.DropDownListFor(model => model.spouseMoveStatus, spouceMoveList, "Select")
                            @Html.ValidationMessageFor(model =>
            model.spouseMoveStatus, "", new { @class = "text-danger" })
                        </td>
                    </tr>


                    <tr>
                        @{
                            var spouceOccupation = new SelectList(
                                new List<SelectListItem>
                                {
            new SelectListItem {Text = "Medical Field (Doctor, Nurse, Nutritionist, Pharmacists and other Health Care workers etc)", Value = "Medical Field (Doctor, Nurse, Nutritionist, Pharmacists and other Health Care workers etc)"},
            new SelectListItem {Text = "Engineering and IT", Value = "Engineering and IT"},
            new SelectListItem {Text = "Business Field (Management, HR, Banking, Marketing etc)", Value = "Business Field (Management, HR, Banking, Marketing etc)"},
            new SelectListItem {Text = "Academia (Teacher, Lecturer, Assistant/ Associate Professor, Professor)", Value = "Academia (Teacher, Lecturer, Assistant/ Associate Professor, Professor)"},
            new SelectListItem {Text = "Student", Value = "Student"},
            new SelectListItem {Text = "Unemployed", Value = "Unemployed"},
            new SelectListItem {Text = "Other", Value = "Other"},
            new SelectListItem {Text = "I am not Married", Value = "I am not Married"}
}, "Value", "Text");
                        }
                        <td>
                            @Html.LabelFor(model => model.spouceEmployment,
            htmlAttributes: new { @class = "register.css" })
                        </td>
                        <td>
                            @Html.DropDownListFor(model => model.spouceEmployment, spouceOccupation, "Select", new { @style = "width: 250px;" })
                            @Html.ValidationMessageFor(model => model.spouceEmployment, "", new { @class = "text-danger" })
                        </td>
                    </tr>
                    <tr>
                        <td></td>
                        <td class="please-no">
                            <div class="form-submit" style="margin-left: 200px">

                                <button type="submit" class="btn btn-primary">Next</button>

                            </div>
                        </td>
                    </tr>

                </table>

            }



        </div>
        </div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.4.1/jquery.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.1/jquery.validate.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/3.2.11/jquery.validate.unobtrusive.js"></script>


</body>
</html>
